//******************************************************************************
///
/// @file <File Name>
///
/// @todo   What's in here?
///
/// @copyright
/// @parblock
///
/// Unofficial Macintosh GUI port of POV-Ray 3.7
/// Copyright 2002-2016 Yvo Smellenbergh
///
/// This port of POV-Ray is free software: you can redistribute it and/or modify
/// it under the terms of the GNU Affero General Public License as
/// published by the Free Software Foundation, either version 3 of the
/// License, or (at your option) any later version.
///
/// This port of POV-Ray is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
/// GNU Affero General Public License for more details.
///
/// You should have received a copy of the GNU Affero General Public License
/// along with this program.  If not, see <http://www.gnu.org/licenses/>.
///
/// ----------------------------------------------------------------------------
///
/// This unofficial port of POV-Ray is based on the Persistence of Vision Ray
/// Tracer ('POV-Ray') version 3.7, Copyright 1991-2016 Persistence of Vision
/// Raytracer Pty. Ltd.
///
/// ----------------------------------------------------------------------------
///
/// POV-Ray is based on the popular DKB raytracer version 2.12.
/// DKBTrace was originally written by David K. Buck.
/// DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.
///
/// @endparblock
///
//******************************************************************************
#import "functionTemplate.h"

 
SFunctionList FunctionList[]=	
{
	{1,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_algbr_cyl1(x,y,z,P0,P1,P2,P3,P4)",	@"",	"A 2d curve is extruded along a third axis. With the SOR option on, it is rotated about the Y-axis.\n\nx, y, z: transformation parameters\nP0: Field strength\nP1: Field limit\nP2: SOR switch\nP3: SOR offset\nP4: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"1.5", @"1", @"0", @"0", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{2,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_algbr_cyl2(x,y,z,P0,P1,P2,P3,P4)",	@"",	"A 2d curve is extruded along a third axis. With the SOR option on, it is rotated about the Y-axis.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Field limit\nP2: SOR switch\nP3: SOR offset\nP4: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.3", @"5", @"1", @"0", @"0", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{3,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_algbr_cyl3(x,y,z,P0,P1,P2,P3,P4)",	@"",	"A 2d curve is extruded along a third axis. With the SOR option on, it is rotated about the Y-axis.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Field limit\nP2: SOR switch\nP3: SOR offset\nP4: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"3", @"1", @"0", @"0", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{4,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_algbr_cyl4(x,y,z,P0,P1,P2,P3,P4)",	@"",	"A 2d curve is extruded along a third axis. With the SOR option on, it is rotated about the Y-axis.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Field limit\nP2: SOR switch\nP3: SOR offset\nP4: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.4", @"5", @"1", @"0", @"0", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{5,	F_BuiltIn,	Function_XYZP0_P1,	Iso|All,
		@"f_bicorn(x,y,z,P0,P1)",	@"",	"A surface of revolution\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Scale",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.01", @"3", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{6,	F_BuiltIn,	Function_XYZP0_P1,	Iso|All,
		@"f_bifolia(x,y,z,P0,P1)",	@"",	"Something like the top part of a paraboloid bounded below by another paraboloid\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Scale",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"3", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{7,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_blob(x,y,z,P0,P1,P2,P3,P4)",	@"",	"Blobs that are similar to a CSG blob with two spherical components. Needs negative threshold settings.\n\nx, y, z: transformation parameters\nP0: X distance between the two components\nP1: Bolb strength of component 1\nP2: Inverse blob radius of component 1\nP3: Blob strength of component 2\nP4: Inverse blob radius of component 2",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1.4", @"1", @"0.8", @"1.2", @"1", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{8,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_blob2(x,y,z,P0,P1,P2,P3)",	@"",	"Similar to a CSG blob with two components.\n\nx, y, z: transformation parameters\nP0: Separation along the X-axis from the first component at the origin\nP1: Inverse size\nP2: Blob strength\nP3: Threshold",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"5", @"2", @"1", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{9,	F_BuiltIn,	Function_XYZP0_P1,	Iso|All,
		@"f_boy_surface(x,y,z,P0,P1)",	@"",	"Boy's surface.\n\nx, y, z: transformation parameters\nP0: Field strength (negative; use low values)\nP1: Scale",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.001", @"0.01", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{10,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_comma(x,y,z,P0)",	@"",	"Comma shape.\n\nx, y, z: transformation parameters\nP0: Scale",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{11,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_cross_ellipsoids(x,y,z,P0,P1,P2,P3)",	@"",	"Union of three crossed ellipsoids along each axis.\n\nx, y, z: transformation parameters\nP0: Eccentricity value\nP1: Inverse size\nP2: Diameter\nP3: Threshold",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.05", @"8", @"8", @"1", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{12,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_crossed_trough(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.05", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{13,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_cubic_saddle(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative; low values)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.5", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{14,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_cushion(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.25", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{15,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_devils_curve(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.2", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{16,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_devils_curve_2d(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: X-factor\nP2: Y-factor\nP3: SOR switch\nP4: SOR offset\nP5: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"0.25", @"0.3", @"1", @"0", @"0", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{17,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_dupin_cyclid(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Major radius of torus\nP2: Minor radius of torus\nP3: X displacement of torus\nP4: Y displacement of torus\nP5: Radius of inversion",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.05", @"0.27", @"0.04", @"0.55", @"0", @"1", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{18,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_ellipsoid(x,y,z,P0,P1,P2)",	@"",	"Sphere or elliposoid. Needs \"threshold 1\".\n\nx, y, z: transformation parameters\nP0: X scale (inverse)\nP1: Y scale (inverse)\nP2: Z scale (inverse)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1.053", @"3.3", @"1.053", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{19,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_enneper(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{20,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_flange_cover(x,y,z,P0,P1,P2,P3)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Spikiness (1 is sphere, lower gives spikes)\nP1: Inverse size\nP2: Flange\nP3: Threshold",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.01", @"35", @"1.5", @"1.2", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{21,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_folium_surface(x,y,z,P0,P1,P2)",	@"",	"A paraboloid glued to a plane\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Inverse Neck width factor\nP2: Divergence (widens paraboloid)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.02", @"15", @"15", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{22,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_folium_surface_2d(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Extrude or rotate the folium curve.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Neck width factor\nP2: Divergence (widens paraboloid)\nP3: SOR switch\nP4: SOR offset\nP5: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.01", @"12", @"20", @"1", @"0", @"0", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{23,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_glob(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{24,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_heart(x,y,z,P0)",	@"",	"Heart shape.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.001", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{25,	F_BuiltIn,	Function_XYZP0_P9,	Iso|All,
		@"f_helical_torus(x,y,z,P0,P1,P2,P3,P4,P5,P6,P7,P8,P9)",	@"",	"Some parameter sets produce a torus with a helical winding around it.\n\nx, y, z: transformation parameters\nP0: Major radius\nP1: Nr of winding loops\nP2: Twistiness of winding\nP3: Fatness of winding?\nP4: Threshold\nP5: Inverse minor radius\nP6: Another fatness of winding control?\nP7: Groove period\nP8: Groove amplitude\nP9: Groove phase",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"2", @"7", @"1", @"0.1", @"1", @"0.5", @"1", @"6", @"2", @"0",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{26,	F_BuiltIn,	Function_XYZP0_P6,	Iso|All,
		@"f_helix1(x,y,z,P0,P1,P2,P3,P4,P5,P6)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Nr of helixes\nP1: Period (controls nr of turns per unit length)\nP2: Minor radius\nP3: Major radius\nP4: Shape parameter\nP5: Cross section type\nP6: Cross section rotation angle (degrees)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"8", @"0.3", @"0.9", @"0.6", @"0.2", @"0", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{27,	F_BuiltIn,	Function_XYZP0_P6,	Iso|All,
		@"f_helix2(x,y,z,P0,P1,P2,P3,P4,P5,P6)",	@"",	"Needs a negated function!\n\nx, y, z: transformation parameters\nP0: not used\nP1: Period (controls the nr of turns per unit length)\nP2: Minor radius\nP3: Major radius\nP4: Not used\nP5: Cross section type\nP6: Cross section rotation angle (degrees)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0", @"8", @"0.35", @"0.4", @"0", @"0.5", @"0", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{28,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_hex_x(x,y,z,P0)",	@"",	"Grid of hexagonal cylinders along the Z-axis. Threshold value controls diameter of cylinders.\nNegating the function creates a honey-comb structure.\n\nx, y, z: transformation parameters\nP0: No effect (syntax requires this parameter)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{29,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_hex_y(x,y,z,P0)",	@"",	"Hexagonal lattice of infinite boxes along the Z-axis.\n\nx, y, z: transformation parameters\nP0: No effect (syntax requires this parameter)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{30,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_hetero_mf(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Multifractal height fields and patterns of \"1/f\" noise.\n\nx, y, z: transformation parameters\nP0: Negative of the exponent of the basis noise frequencies\nP1: Multiplyer used to get from one octave to the next\nP2: Number of different frequencies added to the fractal\nP3: Offset or base altitude\nP4: Scales the heterogeneity of the fractal\nP5: Type of noise-generator",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1.1", @"2.05", @"15", @"0.26", @"0.01", @"1", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{31,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_hunt_surface(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.01", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{32,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_hyperbolic_torus(x,y,z,P0,P1,P2)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Major radius\nP2: Minor radius",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.005", @"1", @"0.6", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{33,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_isect_ellipsoids(x,y,z,P0,P1,P2,P3)",	@"",	"Intersection of three crossed ellipsoids, each oriented along an axis.\n\nx, y, z: transformation parameters\nP0: Eccentricity\nP1: Inverse size\nP2: Diameter\nP3: Threshold",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"5", @"1", @"18", @"1", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{34,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_kampyle_of_eudoxus(x,y,z,P0,P1,P2)",	@"",	"Like two infinite palnes with a dimple at the centre.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Dimple factor\nP2: Closeness (distance between planes)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.001", @"0.01", @"2", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{35,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_kampyle_of_eudoxus_2d(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Rotates or extrudes the kampyle of eudoxus curve.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Dimple factor\nP2: Closenes (distance between planes)\nP3: SOR switch\nP4: SOR offset\nP5: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.001", @"0", @"2", @"1", @"0", @"90", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{36,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_klein_bottle(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.0005", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{37,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_kummer_surface_v1(x,y,z,P0)",	@"",	"A collection of radiating rods.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.01", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{38,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_kummer_surface_v2(x,y,z,P0,P1,P2,P3)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Rod width (when negative)\nP2: Divergence (when negative)\nP3: Controls length of half of the rods. Sign inversion controls the other half.",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.0005", @"-0.3", @"-0.97", @"0", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{39,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_lemniscate_of_gerono(x,y,z,P0)",	@"",	"Hourglass shape.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{40,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_lemniscate_of_gerono_2d(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Rotates or extrudes the lemniscate curve.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Size control\nP2: Width\nP3: SOR switch\nP4: SOR offset\nP5: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.1", @"1", @"1", @"1", @"2", @"-45", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{41,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_mesh1(x,y,z,P0,P1,P2,P3,P4)",	@"",	"Threshold should not be zero. Thickness of threads is controlled by the threshold value.\n\nx, y, z: transformation parameters\nP0: Interval of threads\nP1: Distance between neighbouring threads\nP2: Relative thickness in X and Z directions\nP3: Amplitude of weaving effect\nP4: Relative thickness in Y direction",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.125", @"0.125", @"0.1", @"0.01", @"0.1", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{42,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_mitre(x,y,z,P0)",	@"",	"Like an ellipsoid nipped in half.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.5", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{43,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_nodal_cubic(x,y,z,P0)",	@"",	"Extruding a stophid curve.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.005", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{44,	F_BuiltIn,	Function_XYZ,	Iso|All,
		@"f_noise3d(x,y,z)",	@"",	"\n\nx, y, z: transformation parameters",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{45,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_noise_generator(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Noise generator number",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"2", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{46,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_odd(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{47,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_ovals_of_cassini(x,y,z,P0,P1,P2,P3)",	@"",	"Generalization of the torus shape.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Major radius\nP2: Controls the filling of the torus centre\nP3: Thickness",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.1", @"0.4", @"0.18", @"6", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{48,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_paraboloid(x,y,z,P0)",	@"",	"Rotation of a parabola around the Y-axis.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{49,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_parabolic_torus(x,y,z,P0,P1,P2)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Major radius\nP2: Minor radius",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.1", @"0.4", @"0.5", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{50,	F_BuiltIn,	Function_XYZ,	Iso|All,
		@"f_ph(x,y,z)",	@"",	"Surface of all points at a particular lattitude, i;e; a cone. The angle is controlled by the threshold value.\n\nx, y, z: transformation parameters",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{51,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_pillow(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{52,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_piriform(x,y,z,P0)",	@"",	"Like half a lemniscate.\n\nx, y, z: transformation parameters\nP0: Field strength",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.7", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{53,	F_BuiltIn,	Function_XYZP0_P6,	Iso|All,
		@"f_piriform_2d(x,y,z,P0,P1,P2,P3,P4,P5,P6)",	@"",	"Extrudes or revolves the piriform curve along an axis.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Size factor 1\nP2: Size factor 2\nP3: Fatness\nP4: SOR switch\nP5: SOR offset\nP6: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"1", @"-1", @"0.9", @"1", @"0", @"-90", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{54,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_poly4(x,y,z,P0,P1,P2,P3,P4)",	@"",	"Rotation of any polynomial up to degree 4.\n\nx, y, z: transformation parameters\nP0: Constant\nP1: Y coefficient\nP2: pow(Y,2) coefficient\nP3: pow(Y,3) coefficient\nP4: pow(Y,4) coefficient",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0", @"1", @"-1", @"0", @"0", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{55,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_polytubes(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Collection of tubes following a polynomial up to degree 4.\n\nx, y, z: transformation parameters\nP0: Nr of tubes\nP1: Constant\nP2: Y coefficient\nP3: pow(Y,2) coefficient\nP4: pow(Y,3) coefficient\nP5: pow(Y,4) coefficient",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"8", @"-1", @"-0.01", @"-0.02", @"0.1", @"-0.25", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{56,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_quantum(x,y,z,P0)",	@"",	"Like the shape of the electron density cloud for one of the d orbitals.\n\nx, y, z: transformation parameters\nP0: Not used but required",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{57,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_quartic_paraboloid(x,y,z,P0)",	@"",	"Square-shaped paraboloid.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.01", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{58,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_quartic_saddle(x,y,z,P0)",	@"",	"Square-shaped saddle.\n\nx, y, z: transformation parameters\nP0: Field strength",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.05", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{59,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_quartic_cylinder(x,y,z,P0,P1,P2)",	@"",	"A cylinder with an egg-shaped centre.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Diameter of the \"egg\"\nP2: Width control of the cylinder and heighth of \"egg\"",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"0.8", @"0.2", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{60,	F_BuiltIn,	Function_XYZ,	Iso|All,
		@"f_r(x,y,z)",	@"",	"Sphere. Threshold controls the radius.\n\nx, y, z: transformation parameters",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{61,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_ridge(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Mainly intended for modifying other surfaces.\n\nx, y, z: transformation parameters\nP0: Lambda\nP1: Octaves\nP2: Omega\nP3: Offset\nP4: Ridge\nP5: Type of noise generator",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"3", @"1", @"0.2", @"0", @"0", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{62,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_ridged_mf(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Multifractal height fields and patterns.\n\nx, y, z: transformation parameters\nP0: Negative exponent of the basis noise fraquencies\nP1: Multiplyer to get from one octave to the next\nP2: Nr of different frequencies added to the fractal\nP3: Offset controlling the fractal dimension changes from altitude to altitude\nP4: Gain. Weights successive contributions to the accumulated fractal result\nP5: Type of noise generator",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"2", @"3", @"1", @"0.1", @"1", @"0", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{63,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_rounded_box(x,y,z,P0,P1,P2,P3)",	@"",	"Defined in a cube from -1 to +1. Scale parameters adjust the size without affecting the radius of curvature.\n\nx, y, z: transformation parameters\nP0: Radius of curvature\nP1: Scale X\nP2: Scale Y\nP3: Scale Z",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.3", @"1", @"1", @"1", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{64,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_sphere(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Radius of the sphere",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{65,	F_BuiltIn,	Function_XYZP0_P4,	Iso|All,
		@"f_spikes(x,y,z,P0,P1,P2,P3,P4)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Spikiness\nP1: Hollowness\nP2: Size\nP3: Roundness\nP4: Fatness",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.04", @"5.6", @"-4", @"0.1", @"1", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{66,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_spikes_2d(x,y,z,P0,P1,P2,P3)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Heighth of central spike\nP1: Frequency of spikes in X direction\nP2: Frequency of spikes in Z direction\nP3: Demping factor for spikes farther from the centre",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.7", @"15", @"15", @"2.2", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{67,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_spiral(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Distance between windings\nP1: Thickness\nP2: Outer diameter of spiral\nP3: Not used\nP4: Not used\nP5: Cross section type",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.2", @"0.04", @"1", @"0", @"0", @"1", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{68,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_steiners_roman(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{69,	F_BuiltIn,	Function_XYZP0_P3,	Iso|All,
		@"f_strophoid(x,y,z,P0,P1,P2,P3)",	@"",	"Infinite plane with a bulb\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Size of bulb\nP2: Sharpness\nP3: Flatness of top end of bulb",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.2", @"2", @"0.5", @"0.9", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{70,	F_BuiltIn,	Function_XYZP0_P6,	Iso|All,
		@"f_strophoid_2d(x,y,z,P0,P1,P2,P3,P4,P5,P6)",	@"",	"Extrudes or rotates the strophoid curve along an axis.\n\nx, y, z: transformation parameters\nP0: Field strength\nP1: Size of bulb\nP2: Sharpness\nP3: Fatness\nP4: SOR switch\nP5: SOR offset\nP6: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.02", @"-8", @"0.8", @"0.3", @"1", @"0", @"0", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{71,	F_BuiltIn,	Function_XYZP0_P1,	Iso|All,
		@"f_superellipsoid(x,y,z,P0,P1)",	@"",	"Needs a negated function.\n\nx, y, z: transformation parameters\nP0: East-west exponent\nP1: North-south exponent",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.3", @"0.5", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{72,	F_BuiltIn,	Function_XYZ,	Iso|All,
		@"f_th(x,y,z)",	@"",	"Produces a value equal to the \"theta\" angle, in radians, at any point. It is like the longitude coordinate on the Earth.\n\nx, y, z: transformation parameters",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{73,	F_BuiltIn,	Function_XYZP0_P1,	Iso|All,
		@"f_torus(x,y,z,P0,P1)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Major radius\nP1: Minor radius",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"0.8", @"0.2", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{74,	F_BuiltIn,	Function_XYZP0_P2,	Iso|All,
		@"f_torus2(x,y,z,P0,P1,P2)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Major radius\nP2: Minor radius",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-1", @"0.4", @"0.07", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{75,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_torus_gumdrop(x,y,z,P0)",	@"",	"A torus with a couple of gumdrops hanging off the end.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.01", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{76,	F_BuiltIn,	Function_XYZP0,	Iso|All,
		@"f_umbrella(x,y,z,P0)",	@"",	"\n\nx, y, z: transformation parameters\nP0: Field strength (negative)",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.2", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{77,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_witch_of_agnesi(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Looks like a witches hat.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Controls width of the spike",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.09", @"0.02", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{78,	F_BuiltIn,	Function_XYZP0_P5,	Iso|All,
		@"f_witch_of_agnesi_2d(x,y,z,P0,P1,P2,P3,P4,P5)",	@"",	"Rotates or extrudes the witch of agnesi curve along an axis.\n\nx, y, z: transformation parameters\nP0: Field strength (negative)\nP1: Size of spike\nP2: Heighth of spike\nP3: SOR switch\nP4: SOR offset\nP5: SOR angle",
		/*x,y,z,p0-p9*/ @"x", @"y", @"z", @"-0.2", @"0.2", @"0.08", @"0", @"0", @"0", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{79,	F_BuiltInFloat,	Function_Empty,	All,
		@"clock",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{80,	F_BuiltInFloat,	Function_Empty,	All,
		@"clock_delta",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{81,	F_BuiltInFloat,	Function_Empty,	All,
		@"clock_on",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{82,	F_BuiltInFloat,	Function_Empty,	All,
		@"final_clock",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{83,	F_BuiltInFloat,	Function_Empty,	All,
		@"final_frame",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{84,	F_BuiltInFloat,	Function_Empty,	All,
		@"frame_number",	@"integer",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{85,	F_BuiltInFloat,	Function_Empty,	All,
		@"initial_clock",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{86,	F_BuiltInFloat,	Function_Empty,	All,
		@"initial_frame",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{87,	F_BuiltInFloat,	Function_Empty,	All,
		@"image_width",	@"integer",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{88,	F_BuiltInFloat,	Function_Empty,	All,
		@"image_height",	@"integer",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{89,	F_BuiltInFloat,	Function_Empty,	All,
		@"on",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{90,	F_BuiltInFloat,	Function_Empty,	All,
		@"off",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{91,	F_BuiltInFloat,	Function_Empty,	All,
		@"yes",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{92,	F_BuiltInFloat,	Function_Empty,	All,
		@"no",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{93,	F_BuiltInFloat,	Function_Empty,	All,
		@"true",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{94,	F_BuiltInFloat,	Function_Empty,	All,
		@"false",	@"integer",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{95,	F_BuiltInFloat,	Function_Empty,	Iso|All,
		@"pi",	@"",	"Returns the value of pi\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{96,	F_BuiltInFloat,	Function_Empty,	Iso|All,
		@"e",	@"float",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{97,	F_BuiltInFloat,	Function_Empty,	All,
		@"E",	@"float",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{138,	F_Evaluate,	Function_ID,	All,
		@"dimensions(ID)",	@"integer",	"Number of dimensions of a specified array.\n\nReturns the number of dimensions of a previously declared array identifier.\nExample: for #declare Array= array[6][10], dimensions(Array) returns the value 2.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{139,	F_Evaluate,	Function_IDA,	All,
		@"dimension_size(ID, A)",	@"integer",	"Size of the array's specified dimension.\n\nReturns the size of a given dimension of a previously declared array identifier. Dimensions are numbered left-to-right starting with 1.\nExample: dimension_size(Array,2) returns the value 10 from #declare Array=array[6][10]",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{140,	F_Evaluate,	Function_ID,	All,
		@"file_exists(ID)",	@"true/false",	"Attempts to open the file specified by the string \"S\".\n\nThe current directory and all library directories specified by the Library_Path or +L options are also searched.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{141,	F_Evaluate,	Function_IDV,	All,
		@"inside(ID, V)",	@"true/false",	"Check if point \"V\" is inside a declared object \"O\".\n\nReturns 0,0 when the vector \"V\" is outside the object, specified by the object-identifier \"O\", or 1,0 if it is inside.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{142,	F_Evaluate,	Function_ABC,	Iso|All,
		@"select(A,B,C)",	@"float",	"Compares \"A\" with zero\n\nCompares \"A\" with zero. Depending on the outcome it will return \"B\" or \"C\".\nIf \"A\"<0 it will return \"B\", else \"C\" (A>=0)",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{144,	F_Evaluate,	Function_ID,	All,
		@"min_extent(ID)",	@"vector",	"Minimum x,y,z values for an object declared by the string \"S\".\n\nReturns the coordinates of one corner of the object's bounding box",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{145,	F_Evaluate,	Function_ID,	All,
		@"max_extent(ID)",	@"vector",	"Maximum x,y,z values for an object declared by the string \"S\".\n\nReturns the coordinates of one corner of the object's bounding box",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{146,	F_Evaluate,	Function_ABCD,	Iso|All,
		@"select(A,B,C,D)",	@"float",	"Compares \"A\" with zero\n\nCompares \"A\" with zero. Depending on the outcome it will return \"B\", \"C\" or \"D\".\nIf \"A\"<0 it will return \"B\". If \"A\"=0 it will return \"C\".  Else it will return \"D\" (A>0)",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{147,	F_Math,	Function_A,	Iso|All,
		@"abs(A)",	@"float",	"Absolute value of A\n\nIf A is negative, returns A otherwise returns A",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{148,	F_Math,	Function_A,	Iso|All,
		@"ceil(A)",	@"integer",	"Ceiling of \"A\"\n\nReturns the smallest integer greater than \"A\". Rounds up to the next higher integer",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{149,	F_Math,	Function_AB,	Iso|All,
		@"div(A,B)",	@"integer",	"Integer division\n\nReturns the integer part of (\"A\"/\"B\")",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{150,	F_Math,	Function_A,	All,
		@"exp(A)",	@"float",	"Exponential of \"A\"\n\nReturns the value of e raised to the power \"A\" where e is the base of the natural logarithm.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{151,	F_Math,	Function_A,	Iso|All,
		@"floor(A)",	@"integer",	"Floor of \"A\"\n\nReturns the largest integer less than \"A\". Rounds down to the next lower integer.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{152,	F_Math,	Function_A,	Iso|All,
		@"int(A)",	@"integer",	"Integer part of \"A\"\n\nReturns the truncated integer part of \"A\". Rounds towards zero.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{153,	F_Math,	Function_A,	Iso|All,
		@"log(A)",	@"float",	"Logarithm of \"A\"\n\nReturns the logarithm base 10 of the value \"A\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{154,	F_Math,	Function_A,	Iso|All,
		@"ln(A)",	@"float",	"Natural logarithm of \"A\"\n\nReturns the natural logarithm base e of the value \"A\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{155,	F_Math,	Function_AB,	Iso|All,
		@"max(A,B, ...)",	@"float",	"Maximum of \"A\" and \"B\"\n\nReturns A if A is larger than B. Otherwise returns B.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{156,	F_Math,	Function_AB,	Iso|All,
		@"min(A,B, ...)",	@"float",	"Minimum of \"A\" and \"B\"\n\nReturns A if A is smaller than B. Otherwise returns B.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{157,	F_Math,	Function_AB,	Iso|All,
		@"mod(A,B)",	@"float",	"Value \"A\" modulo \"B\".\n\nReturns the remainder after the integer division of \"A\"/\"B\". Formula is mod=((A/B)-int(A/B))*B",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{158,	F_Math,	Function_AB,	Iso|All,
		@"pow(A,B)",	@"float",	"Exponentiation.\n\nReturns the value of \"A\" raised to the power \"B\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{159,	F_Math,	Function_A,	All,
		@"rand(I)",	@"float",	"Returns the next pseudo-random number from the stream specified by the positive integer \"I\".\n\nYou must call seed() to initialize a random stream before calling rand().The numbers are uniformely distributed, and have values between 0.0 and 1.0 inclusively.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{160,	F_Math,	Function_A,	All,
		@"seed(I)",	@"float",	"Initializes a new pseudo-random stream with the initial seed value \"i\".\n\nThe number corresponding to this random stream is returned.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{161,	F_Math,	Function_A,	Iso|All,
		@"sqrt(A)",	@"float",	"Square root of value \"A\".\n\nReturns the value whose square is \"A\".",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{162,	F_Math,	Function_V1V2,	All,
		@"vdot(V1,V2)",	@"float",	"Dot product of \"V1\" and \"V2\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{163,	F_Math,	Function_V,	All,
		@"vlength(V)",	@"float",	"Length of vector \"V\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{164,	F_Math,	Function_VLOO,	All,
		@"vturbulence(Lambda, Omega, Octaves, V)",	@"vector",	"Turbulence vector of  \"V\"\n\nReturns the turbulence vector for the point \"V\" based on the parameters for Lambda, Omega and Octaves",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{165,	F_Math,	Function_V1V2,	All,
		@"vrotate(V1,V2)",	@"vector",	"Rotate point \"V1\" about origin by rotation vector \"V2\"\n\nRotate point \"V1\" about the x-axis by an angle specified in degrees by the float value \"V2x\". Then similarly for \"V2y\" and \"V2z\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{166,	F_Math,	Function_V,	All,
		@"vnormalize(V)",	@"vector",	"Normalize vector \"V\"\n\nReturns a unit length vector that has the same direction as \"V\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{167,	F_Math,	Function_V1V2,	All,
		@"vcross(V1,V2)",	@"vector",	"Cross product of vector \"V1\" and vector \"V2\".\n\nReturns a vector that is the vector cross product of two vectors.\nThe resulting vector is perpendicular to the two original vectors and its length is proportional to the angle between them.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{168,	F_Math,	Function_V1V2A,	All,
		@"vaxis_rotate(V1,V2,A)",	@"vector",	"Rotate point \"V1\" about axis \"V2\" by angle \"A\".\n\nThe angle through which point V1 is rotated is specified in degrees by the float value \"A\".",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{209,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_agate(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{210,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_boxed(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{211,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_bozo(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{212,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_brick(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{213,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_bumps(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{214,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_checker(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{215,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_crackle(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{216,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_cylindrical(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{217,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_dents(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{218,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_gradientX(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{219,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_gradientY(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{220,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_gradientZ(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{221,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_granite(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{222,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_hexagon(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{223,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_leopard(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{224,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_mandel(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{225,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_marble(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{226,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_onion(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{227,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_planar(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{228,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_radial(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{229,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_ripples(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{230,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_spherical(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{231,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_spiral1(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{232,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_spiral2(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{233,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_spotted(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{234,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_waves(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{235,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_wood(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{236,	F_Pattern,	Function_XYZ,	Iso|All,
		@"f_wrinkles(x,y,z)",	@"",	"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{184,	F_String,	Function_S,	All,
		@"asc(S)",	@"integer",	"ASCII value of the first character of the string S\n\nReturns an integer value in the range 0 to 255 that is the ASCII value of the first character of the string \"S\"\nExample: asc(\"ABC\") is 65 because that is the value of the character \"A\".",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{185,	F_String,	Function_S1S2,	All,
		@"strcmp(S1, S2)",	@"float",	"Compares string \"S1\" to string \"S2\".\n\nReturns zero if the strings are equal, a positive number if \"S1\" comes after \"S2\" in the ASCII collating sequence, else a negative number.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{186,	F_String,	Function_S,	All,
		@"strlen(S)",	@"integer",	"Length of string \"S\".\n\nReturns the number of characters in the string \"A\".",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{187,	F_String,	Function_S,	All,
		@"val(S)",	@"float",	"Converts string \"S\" to its float value represented by the string\n\nExample: val(\"12.3\") is 12.3 as float.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{188,	F_String,	Function_A,	All,
		@"chr(A)",	@"string",	"Character whose ASCII character value is \"A\"\n\nReturns a single character string. The ASCII value of the character is specified by the integer \"A\" which must be in the range 0 to 255.\nExample: chr(70) is the string \"F\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{189,	F_String,	Function_S1S2,	All,
		@"concat(S1,S2, ...)",	@"string",	"Concatenates strings \"S1\" and \"S2\"\n\nReturns a string that is the concatenation of all parameter strings. Must have at least 2 parameters but may have more",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{190,	F_String,	Function_ALP,	All,
		@"str(A,L,P)",	@"string",	"Returns a formatted string representation of float value \"A\"\n\nThe integer \"L\" specifies the min length of the string and the type of left padding used if the string's representation is shorter than the min. \"P\" gives the number of digits after the decimal point",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{191,	F_String,	Function_S,	All,
		@"strlwr(S)",	@"string",	"Lower case of \"S\"\n\nReturns a new string in which all upper case letters in the string \"S\" are converted to lower case.\nExample: strlwr(\"Hello\") results in \"hello\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{192,	F_String,	Function_SPL,	All,
		@"substr(S,P,L)",	@"string",	"Sub-string of \"S\"\n\nReturns a string that is a subset of the characters in string \"S\", starting at the position specified by the integer value \"P\" for a length specified by the integer value \"L\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{193,	F_String,	Function_S,	All,
		@"strupr(S)",	@"string",	"Upper case of \"S\"\n\nReturns a new string in which all lower case letters in the string \"S\" are converted to upper case.\nExample: strupr(\"Hello\") results in \"HELLO\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{194,	F_String,	Function_NVSLP,	All,
		@"vstr(N,V,S,L,P)",	@"string",	"Converts vector \"V\" to a formatted string\n\nReturns a formatted string representation of vector \"V\", where the elements of the vector are separated by the string parameter \"S\". The integer value \"N\" specifies the amount of dimensions in vector \"V\". The functio of \"L\" and \"P\" is the same as in str()",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{195,	F_Trigonometry,	Function_A,	Iso|All,
		@"acos(A)",	@"float",	"Arc-cosine of \"A\"\n\nReturns the angle, measured in radians, whose cosine is \"A\"",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{196,	F_Trigonometry,	Function_A,	Iso|All,
		@"acosh(A)",	@"float",	"Invers hyperbolic cosine of \"A\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{197,	F_Trigonometry,	Function_A,	Iso|All,
		@"asin(A)",	@"float",	"Arc-sine of \"A\"\n\nReturns the angle, measured in radians, whose sine is \"A\".",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{198,	F_Trigonometry,	Function_A,	Iso|All,
		@"asinh(A)",	@"",	"Invers hyperbolic sine of \"A\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{199,	F_Trigonometry,	Function_AB,	Iso|All,
		@"atan2(A,B)",	@"float",	"Arc-tangent of (\"A\"/\"B\")\n\nReturns the angle, measured in radians, whose tangent is (\"A\"/\"B\").",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{200,	F_Trigonometry,	Function_A,	Iso|All,
		@"atanh(A)",	@"",	"Invers hyperbolic tangent of \"A\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{201,	F_Trigonometry,	Function_A,	Iso|All,
		@"cos(A)",	@"float",	"Cosine of angle \"A\"\n\nReturns the cosine of the angle \"A\", where \"A\" is measured in radians",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{202,	F_Trigonometry,	Function_A,	Iso|All,
		@"cosh(A)",	@"",	"Hyperbolic cosine of \"A\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{203,	F_Trigonometry,	Function_A,	Iso|All,
		@"degrees(A)",	@"float",	"Converts radians to degrees\n\nReturns the angle measured in degrees whose value in radians is \"A\".\nFormula is degrees=A/pi*180",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{204,	F_Trigonometry,	Function_A,	Iso|All,
		@"radians(A)",	@"float",	"Converts degrees to radians\n\nReturns the angle measured in radians whose value in degrees is \"A\". Formula is radians=A*pi/180",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{205,	F_Trigonometry,	Function_A,	Iso|All,
		@"sin(A)",	@"float",	"Sine of angle \"A\".\n\nAngle \"A\" is measured in radians.",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{206,	F_Trigonometry,	Function_A,	Iso|All,
		@"sinh(A)",	@"",	"Hyperbolic sine of \"A\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{207,	F_Trigonometry,	Function_A,	Iso|All,
		@"tan(A)",	@"float",	"Tangent of angle \"A\".\n\nAngle \"A\" is measured in radians. ",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{208,	F_Trigonometry,	Function_A,	Iso|All,
		@"tanh(A)",	@"",	"Hyperbolic tangent of \"A\"\n\n",
		/*x,y,z,p0-p9*/ @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"", @"",
		/*s, s1, s2*/ @"", @"", @"",
		/*V1A..V1E*/ @"", @"", @"", @"", @"",
		/*V2A..V2C*/ @"", @"", @"",
		/*A,B,C,D,L,P*/ @"", @"", @"", @"", @"",
		/*OM, OC, LA*/ @"", @"", @"", @"",
		/*N*/ },

	{32000,Endlist,	Function_Empty,	All,	@"",	@"",	"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",	@"",}
};

